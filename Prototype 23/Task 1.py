# Условие задания КИМ 23 (Умскул):
'''
У исполнителя есть три команды:
- Прибавить 1
- Умножить на 2
- Умножить на 3
Определите количество программ исполнителя, которые преобразуют число 1 в 49, при условии,
что траектория выполнения программы содержит число 14 и не содержит число 6.
В ответ запишите целое число - количество программ.
'''


# Создаём функцию преобразования одного числа в другое
def F(start, end):
    if start == end:  # Если получили нужное число
        return 1  # Возвращаем истину
    # Если что-то пошло не так: либо в траектории вычислений содержится 6 (что не подходит по условию) или число больше, чем нужно
    if start > end or start == 6:
        return 0  # Возвращаем ложь
    # Складываем все способы из команд, которыми можно пользоваться
    return F(start + 1, end) + F(start * 2, end) + F(start * 3, end)


print(F(1, 14) * F(14, 49))  # Выводим результат: произведение всех способов: от 1 до 14 и от 14 до 49
# 14 прописывали отдельно, так как оно обязательно должно быть по условию

# Условие задания КИМ 23 (Гусева Марина Альфонсовна):
'''
У исполнителя имеются две команды, которые обозначены латинскими буквами:
A. Вычесть 2
B. Найти целую часть от деления на 2
Сколько существует программ, для которых при исходном числе 32 результатом является число 1,
при этом траектория вычислений содержит число 14?
'''


def F(start, end):
    if start == end:
        return 1
    elif start < end:
        return 0
    else:
        return F(start - 2, end) + F(start // 2, end)


print(F(32, 14) * F(14, 1))

# Условие задания КИМ 23 (Гусева Марина Альфонсовна):
'''
У исполнителя Калькулятор три команды, которым присвоены номера:
1. Прибавь 1
2. Прибавь 2
3. Прибавь предыдущее
Первая команда увеличивает число на экране на 1, вторая увеличивает это число на 2,
третья прибавляет к числу на экране число, меньшее на 1 (к числу 3 прибавляется 2, к числу 11
прибавляется 10 и т. д.). Программа для исполнителя – это последовательность команд.
Сколько существует программ, которые число 2 преобразуют в число 9?
'''


def F(n, k):
    if n == k:
        return 1
    elif n > k:
        return 0
    else:
        return F(n + 1, k) + F(n + 2, k) + F(n + (n - 1), k)


print(F(2, 9))
