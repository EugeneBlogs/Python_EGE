# Условие задания КИМ 1 (Умскул):
'''
На рисунке схема дорог N-ского района изображена в виде графа, в таблице содержатся
сведения о протяжённости каждой из этих дорог (в километрах).
(Файл "Prototype 1/Task 3/Condition 3.png")
Так как таблицу и схему рисовали независимо друг от друга, нумерация населённых пунктов в таблице
никак не связана с буквенными обозначениями на графе.
Определите, какова сумма протяжённостей дорог из пункта "D" в пункт "G" и из пункта "А" в пункт "С".
В ответе запишите целое число.
'''

from itertools import *

graph = [
    ["A", "B"], ["A", "C"],
    ["B", "D"],
    ["C", "G"], ["C", "E"],
    ["E", "F"],
    ["F", "G"],
    ["D", "F"], ["D", "G"]
]

# Добавляем третье число - длина дороги
table = [
    [1, 4, 30], [1, 5, 3], [1, 7, 5],
    [2, 4, 21], [2, 6, 13],
    [3, 5, 39], [3, 6, 53], [3, 7, 2],
    [5, 6, 8]
]

for el in permutations("ABCDEFG"):
    if all([[el[x - 1], el[y - 1]] in graph or [el[y - 1], el[x - 1]] in graph for x, y, z in
            table]):  # Теперь в цикле 3 переменные
        # Составляем 2 отсортированных списка с буквамм
        letters1 = sorted([el.index("D") + 1, el.index("G") + 1])
        letters2 = sorted([el.index("A") + 1, el.index("C") + 1])
        '''
        "for x, y, c in table" - Проходимся по значениям таблицы.
        "if letters1 == [x, y] or letters2 == [x, y]" - Проверка, нашли ли мы такой список (или в обратном порядке),
        то добавляем длину "c" в список, а затем выводим сумму списка (т.е. сумму длин дорог)
        '''
        print(sum([c for x, y, c in table if letters1 == [x, y] or letters2 == [x, y]]))
