# Условие задания КИМ 13 (Умскул):
'''
В терминологии сетей ТСР/IP маской сети называется двоичное число, определяющее,
какая часть IР-адреса узла сети относится к адресу сети, а какая - к адресу самого узла в этой сети.
Адрес сети получается в результате применения поразрядной коньюнкции к заданному IP-адресу узла и маске.
Сеть задана IP-адресом 255.211.33.160 и маской сети 255.255.A.0, где "A" - некоторое допустимое для записи
маски число. Определите минимальное значение "A", для которого для всех IP-адресов этой сети в двоичной записи
IP-адреса суммарное количество единиц в левых двух байтах не менее суммарного количества единиц в правых двух байтах.
В ответе укажите только число.
'''

from ipaddress import *

for i in range(9):
    '''
    У "A" в начале должны быть единицы, а затем нули, так как это маска.
    Составляем "A":
    1. Количество единиц, которое перебираем.
    2. Добиваем нулями.
    3. Обрезаем первые 8 символов.
    4. Переводим в десятичную систему счисления.
    '''
    A = i * "1" + 8 * "0"
    A = int(A[:8], 2)
    ip_net = ip_network(f"255.211.33.160/255.255.{A}.0", 0)
    for ip_add in ip_net:
        ip_add = f"{ip_add:b}"
        if not (ip_add[:16].count("1") >= ip_add[16:].count("1")):
            break
    else:
        print(A)
        break

# Условие задания КИМ 13 (Умскул):
'''
В терминологии сетей ТСР/IP маской сети называется двоичное число, определяющее,
какая часть IР-адреса узла сети относится к адресу сети, а какая - к адресу самого узла в этой сети.
Адрес сети получается в результате применения поразрядной коньюнкции к заданному IP-адресу узла и маске.
Сеть задана IP-адресом 127.254.A.10, где "A" - некоторое допустимое для записи IP-адреса число,
и маской сети 255.255.224.0. Определите максимальное значение "A", для которого для всех IP-адресов этой сети в двоичной записи
IP-адреса суммарное количество единиц в левых двух байтах не менее суммарного количества единиц в правых двух байтах.
В ответе укажите только число.
'''

from ipaddress import *

for A in range(255, -1, -1):
    ip_net = ip_network(f"127.254.{A}.10/255.255.224.0", 0)
    for ip_add in ip_net:
        ip_add = f"{ip_add:b}"
        if not (ip_add[:16].count("1") >= ip_add[16:].count("1")):
            break
    else:
        print(A)
        break
