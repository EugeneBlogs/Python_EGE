# Условие задания КИМ 26 (Умскул, Демоверсия 2024):
'''
Входной файл содержит сведения о заявках на проведение мероприятий в конференц-зале.
В каждой заявке указаны время начала и время окончания мероприятия (в минутах от начала суток).
Если время начала одного мероприятия меньше времени окончания другого, то провести можно только одно из них.
Если время окончания одного мероприятия совпадает со временем начала другого, то провести можно оба.
Определите, какое максимальное количество мероприятий можно провести в конференц-зале
и каков при этом максимально возможный перерыв между двумя последними мероприятиями.

Входные данные:
В первой строке входного файла находится число "N" ("N < 1000") - количество заявок на проведение мероприятий.
Следующие "N" строк содержат пары чисел, обозначающих время начала и время окончания мероприятий.
Каждое из чисел натуральное, не превосходящее 1440.

Запишите в ответе два числа: максимальное количество мероприятий
и самый длинный перерыв между двумя последними мероприятиями (в минутах).

Пример входного файла:
5
10 150
100 120
131 170
150 180
120 130
При таких исходных данных можно провести максимум три мероприятия, например, мероприятия по заявкам 2, 3 и 5.
Максимальный перерыв между двумя последними мероприятиями составит 20 мин.,
если состоятся мероприятия по заявкам 2, 4 и 5.
'''

f = open("6.txt")
N = f.readline()
events = [list(map(int, s.split())) for s in f]
events.sort(
    key=lambda x: (x[1], x[0]))  # Сортируем по возрастанию времени окончания, а затем по возрастанию времени начала
now_end = events[0][1]  # Текущее время окончания
count = 1  # Количество проведённых мероприятий (одно уже по умолчанию проведено)
timeout = 0  # Время перерыва
for i in range(1, len(events)):
    if events[i][0] >= now_end:  # Если время начала мероприятия больше, чем время конца текущего
        count += 1  # Добавляем проведённое мероприятие
        timeout = events[i][0] - now_end  # Изменяем время перерыва (начало нового мероприятия минус конец прошлого)
        now_end = events[i][1]  # Меняем время конца
print(count, timeout)